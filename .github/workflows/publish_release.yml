name: Publish Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
jobs:
  publish_release:
    name: Publish Release
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: ./release-notes.md
          draft: false
          prerelease: false
  linux_release:
    name: Linux Release
    needs: publish_release
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with: 
        python-version: "3.10"
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements.txt
        pip install pyinstaller
    - name: Build by Pyinstaller
      run: |
        pyinstaller -F -n YYsmart-Automation multi_stu.py
        pyinstaller -F -n Helper helper.py
    - name: Arrange Files
      run: |
        mkdir ./release/
        mkdir ./release/YYsmart-Automation_Linux/
        cd ./release/YYsmart-Automation_Linux/
        cp ../../dist/YYsmart-Automation .
        cp ../../dist/Helper .
        cp -r ../../data .
        cp -r ../../students .
        cp -r ../../settings_profiles .
    - name: Zip Files
      run: |
        cd ./release
        zip -r ./YYsmart-Automation_Linux.zip ./YYsmart-Automation_Linux
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.publish_release.outputs.upload_url }}
        asset_path: ./release/YYsmart-Automation_Linux.zip
        asset_name: YYsmart-Automation_Linux.zip
        asset_content_type: application/zip
  windows_release:
    name: Windows Release
    needs: publish_release
    runs-on: windows-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with: 
        python-version: "3.10"
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements.txt
        pip install pyinstaller
        choco install zip
    - name: Build by Pyinstaller
      run: |
        pyinstaller -F -n YYsmart-Automation.exe multi_stu.py
        pyinstaller -F -n Helper.exe helper.py
    - name: Arrange Files
      run: |
        mkdir ./release/
        mkdir ./release/YYsmart-Automation_Windows/
        cd ./release/YYsmart-Automation_Windows/
        cp ../../dist/YYsmart-Automation.exe .
        cp ../../dist/Helper.exe .
        cp -r ../../data .
        cp -r ../../students .
        cp -r ../../settings_profiles .
    - name: Zip Files
      run: |
        cd ./release
        zip -r ./YYsmart-Automation_Windows.zip ./YYsmart-Automation_Windows
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.publish_release.outputs.upload_url }}
        asset_path: ./release/YYsmart-Automation_Windows.zip
        asset_name: YYsmart-Automation_Windows.zip
        asset_content_type: application/zip
